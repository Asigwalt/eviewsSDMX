// Generated by CoffeeScript 1.10.0
(function() {
  var ReportingPeriodType, createErrorMessage, validEnum, validIso8601, validPattern, validPeriod;

  ReportingPeriodType = require('./sdmx-patterns').ReportingPeriodType;

  validEnum = function(input, list, name, errors) {
    var found, key, value;
    found = false;
    for (key in list) {
      value = list[key];
      if (value === input) {
        found = true;
      }
    }
    if (!found) {
      errors.push(input + " is not in the list of supported " + name + " (" + ((function() {
        var results;
        results = [];
        for (key in list) {
          value = list[key];
          results.push(value);
        }
        return results;
      })()) + ")");
    }
    return found;
  };

  validPattern = function(input, regex, name, errors) {
    var valid;
    valid = input && input.match(regex);
    if (!valid) {
      errors.push(input + " is not compliant with the pattern defined for " + name + " (" + regex + ")");
    }
    return valid;
  };

  createErrorMessage = function(errors, type) {
    var error, i, len, msg;
    msg = "Not a valid " + type + ": \n";
    for (i = 0, len = errors.length; i < len; i++) {
      error = errors[i];
      msg += "- " + error + " \n";
    }
    return msg;
  };

  validIso8601 = function(input, name, errors) {
    var valid;
    valid = true;
    if (isNaN(Date.parse(input))) {
      errors.push(name + " must be a valid ISO8601 date");
      valid = false;
    }
    return valid;
  };

  validPeriod = function(input, name, errors) {
    var valid;
    valid = validIso8601(input, name, errors) || validPattern(input, ReportingPeriodType, name, errors);
    if (!valid) {
      errors.push(name + " must be a valid SDMX period or a valid ISO8601 date");
      valid = false;
    }
    return valid;
  };

  exports.isValidEnum = validEnum;

  exports.isValidPattern = validPattern;

  exports.createErrorMessage = createErrorMessage;

  exports.isValidDate = validIso8601;

  exports.isValidPeriod = validPeriod;

}).call(this);
